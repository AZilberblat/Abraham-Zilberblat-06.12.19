{"version":3,"sources":["components/SearchBar.js","components/WeatherDailyView.js","components/CurrentWeather.js","components/weather.js","components/favoriteCity.js","components/favorites.js","routes/NavRoots.js","App.js","index.js"],"names":["completeDummy","SearchBar","props","state","dataSource","onSearch","value","this","setState","item","Option","key","Key","text","LocalizedName","className","console","log","selectedCity","filter","style","width","size","map","renderOption","bind","onSelect","handleSearch","placeholder","optionLabelProp","suffix","marginRight","type","React","Component","WeatherDailyView","daily","temperture","CurrentWeatherLocation","name","title","API","POST_FIX","FORECAST_ONE_DAY","CurrentWeather","forecast","dayforcast","cityName","cityKey","favoritesDisabled","initDisableFavorite","refreshWeather","checkFavorites","favorites","JSON","parse","localStorage","getItem","isFavorite","localizedName","onSearchDaily","fetch","then","response","json","body","DailyForecasts","setItem","stringify","Temperature","Metric","Value","WeatherText","Button","disabled","onClick","addToFavorites","dayInfo","index","dateformat","Date","substring","Maximum","FavoriteCity","city","Favorites","loadFavorites","favoritesDetails","componentDidMount","bodyWithName","prevFavorites","favorite","loaded","Object","keys","toCityView","exact","path","component","App","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","NavLink","NavbarText","navBar","NavRoots","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ed94285.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { Icon, Button, Input, AutoComplete, Select } from \"antd\";\r\nimport \"./weather.css\"\r\n\r\nconst api = \"5QdG89dKykTEr5xjK0rnYXxZN9xy5D5r\"\r\nconst AUTO_COMPLETE_URL =`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${api}&q=`\r\nconst completeDummy = [{\"Version\":1,\"Key\":\"328328\",\"Type\":\"City\",\"Rank\":10,\"LocalizedName\":\"London\",\"Country\":{\"ID\":\"GB\",\"LocalizedName\":\"United Kingdom\"},\"AdministrativeArea\":{\"ID\":\"LND\",\"LocalizedName\":\"London\"}},{\"Version\":1,\"Key\":\"264120\",\"Type\":\"City\",\"Rank\":10,\"LocalizedName\":\"Lima\",\"Country\":{\"ID\":\"PE\",\"LocalizedName\":\"Peru\"},\"AdministrativeArea\":{\"ID\":\"LMA\",\"LocalizedName\":\"Lima\"}},{\"Version\":1,\"Key\":\"102246\",\"Type\":\"City\",\"Rank\":11,\"LocalizedName\":\"Lanzhou\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"GS\",\"LocalizedName\":\"Gansu\"}},{\"Version\":1,\"Key\":\"260622\",\"Type\":\"City\",\"Rank\":11,\"LocalizedName\":\"Lahore\",\"Country\":{\"ID\":\"PK\",\"LocalizedName\":\"Pakistan\"},\"AdministrativeArea\":{\"ID\":\"PB\",\"LocalizedName\":\"Punjab\"}},{\"Version\":1,\"Key\":\"58668\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Langfang\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"HE\",\"LocalizedName\":\"Hebei\"}},{\"Version\":1,\"Key\":\"59411\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Loudi\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"HN\",\"LocalizedName\":\"Hunan\"}},{\"Version\":1,\"Key\":\"60972\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Leshan\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"SC\",\"LocalizedName\":\"Sichuan\"}},{\"Version\":1,\"Key\":\"60636\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Liaocheng\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"SD\",\"LocalizedName\":\"Shandong\"}},{\"Version\":1,\"Key\":\"60637\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Linyi\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"SD\",\"LocalizedName\":\"Shandong\"}},{\"Version\":1,\"Key\":\"60838\",\"Type\":\"City\",\"Rank\":13,\"LocalizedName\":\"Linfen\",\"Country\":{\"ID\":\"CN\",\"LocalizedName\":\"China\"},\"AdministrativeArea\":{\"ID\":\"SX\",\"LocalizedName\":\"Shanxi\"}}]\r\nexport default class SearchBar extends React.Component{\r\n\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            dataSource: []\r\n        }\r\n        this.onSearch=props.onSearch;\r\n    }\r\n\r\n\r\n    handleSearch(value){\r\n      if(value===\"\"){return}\r\n      \r\n        // fetch(AUTO_COMPLETE_URL+value).then(\r\n        //     (response)=>response.json()\r\n        // ).then(\r\n        //     (body)=>{\r\n            this.setState({\r\n                //body.map completeDummy\r\n                dataSource: completeDummy//.map(this.renderOption.bind(this))\r\n            })\r\n            // }\r\n        // )\r\n       \r\n        \r\n\r\n    }\r\n\r\n    renderOption(item) {\r\n        return (\r\n          <Select.Option key={item.Key} text={item.LocalizedName}>\r\n            <div className=\"global-search-item\">\r\n              <span className=\"global-search-item-desc\">\r\n                 {item.LocalizedName} \r\n              </span>\r\n            </div>\r\n          </Select.Option>\r\n        );\r\n      }\r\n\r\n    onSelect(value){\r\n        console.log(value);\r\n        console.log(this.state.dataSource);\r\n        \r\n        const selectedCity=this.state.dataSource.filter((item)=>item.Key==value)\r\n        console.log(selectedCity);\r\n        \r\n        this.onSearch(value,selectedCity[0].LocalizedName);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n          <div className=\"global-search-wrapper\" style={{ width: 300 }}>\r\n            <AutoComplete\r\n              className=\"global-search\"\r\n              size=\"large\"\r\n              style={{ width: '100%' }}\r\n              dataSource={this.state.dataSource.map(this.renderOption.bind(this))}\r\n              onSelect={this.onSelect.bind(this)}\r\n              onSearch={this.handleSearch.bind(this)}\r\n              placeholder=\"input here\"\r\n              optionLabelProp=\"text\"\r\n            >\r\n              <Input\r\n                suffix={\r\n                  <Button\r\n                    className=\"search-btn\"\r\n                    style={{ marginRight: -12 }}\r\n                    size=\"large\"\r\n                    type=\"primary\"\r\n                  >\r\n                    <Icon type=\"search\" />\r\n                  </Button>\r\n                }\r\n              />\r\n            </AutoComplete>\r\n          </div>\r\n        );\r\n      }\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'antd';\r\n\r\nexport default class WeatherDailyView extends React.Component{\r\n\r\n    render(){\r\n       const {daily,temperture} = this.props;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>{daily}</h1>\r\n                <h3>{temperture}</h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'antd';\r\n\r\nexport default class CurrentWeatherLocation extends React.Component{\r\n\r\n    render(){\r\n       const {name,temperture,title} = this.props;\r\n\r\n\r\n        return (\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <h3>{temperture}</h3>\r\n                <h3>{title}</h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from \"./SearchBar\"\r\nimport WeatherDailyView from \"./WeatherDailyView\"\r\nimport \"./weather.css\"\r\nimport CurrentWeatherLocation from \"./CurrentWeather\"\r\nimport { Button } from 'reactstrap';\r\nimport { Spin } from 'antd';\r\nimport dateformat from 'dateformat'\r\n\r\nexport const API =\"rRN6dTLDIhr3Dl8sJX9PtuLR8cuvDAPt\"\r\n//\"5QdG89dKykTEr5xjK0rnYXxZN9xy5D5r\" first api key\r\n//\"rRN6dTLDIhr3Dl8sJX9PtuLR8cuvDAPt\"; \r\nconst POST_FIX=`?apikey=${API}&metric=true`\r\nconst FORECAST_5DAY_URL=`http://dataservice.accuweather.com/forecasts/v1/daily/5day/`\r\nexport const FORECAST_ONE_DAY=`http://dataservice.accuweather.com/currentconditions/v1/`\r\n\r\n  \r\n   export default class CurrentWeather extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        const defaultKey=\"215854\"\r\n        const defaultCity=\"Tel-Aviv\"\r\n        this.state={\r\n            forecast:[],\r\n            dayforcast:null, //onedaydummy\r\n            cityName:defaultCity,\r\n            cityKey:defaultKey,\r\n            favoritesDisabled:this.initDisableFavorite(defaultKey)\r\n            \r\n        }\r\n\r\n        this.refreshWeather(defaultKey,defaultCity)\r\n        this.checkFavorites(defaultKey)\r\n\r\n    }\r\n\r\n    initDisableFavorite(value){\r\n      let favorites = JSON.parse(localStorage.getItem(\"favorites\"))\r\n      if(favorites){\r\n       const isFavorite = !!favorites[value]\r\n       return isFavorite\r\n      }\r\n      return false\r\n    }\r\n\r\n    checkFavorites(value){\r\n      let favorites = JSON.parse(localStorage.getItem(\"favorites\"))\r\n      if(favorites){\r\n       const isFavorite = !!favorites[value]\r\n       this.setState({\r\n         favoritesDisabled:isFavorite\r\n       })\r\n      }\r\n      else{\r\n        this.setState({\r\n          favoritesDisabled:false\r\n        })\r\n      }\r\n\r\n    }\r\n\r\n    refreshWeather(value, localizedName){\r\n      this.checkFavorites(value);\r\n       this.onSearchDaily(value);\r\n        fetch(FORECAST_5DAY_URL+value+POST_FIX).then(\r\n            (response)=>response.json()\r\n        ).then(\r\n            (body)=>{\r\n                //console.log(\"Refreash five day\"+JSON.stringify(body))\r\n            this.setState({\r\n               forecast: body.DailyForecasts,\r\n               //forecast:fiveDayDummy,\r\n               cityName: localizedName,\r\n               cityKey: value\r\n                \r\n                \r\n                \r\n            })\r\n            \r\n                \r\n             })\r\n    }\r\n\r\n    onSearchDaily(value){\r\n      \r\n      fetch(FORECAST_ONE_DAY+value+`?apikey=${API}`).then(\r\n        (response)=>response.json()\r\n    ).then(\r\n        (body)=>{\r\n    //         console.log(\"Rfresh one day\"+JSON.stringify(body))\r\n        this.setState({\r\n          //body\r\n            dayforcast:body,\r\n            \r\n            \r\n            \r\n        })\r\n        \r\n            \r\n         })\r\n     \r\n\r\n    }\r\n\r\n    addToFavorites(){\r\n      let favorites = JSON.parse(localStorage.getItem(\"favorites\"))\r\n      if(!favorites){\r\n        favorites={}\r\n      }\r\n     \r\n      favorites[this.state.cityKey]={\"city\":this.state.cityName}\r\n      localStorage.setItem(\"favorites\",JSON.stringify(favorites))\r\n      this.setState({\r\n        favoritesDisabled:true\r\n      })\r\n      \r\n      \r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n      \r\n    }\r\n\r\n    render(){\r\n\r\n     console.log(this.state.dayforcast);\r\n     \r\n\r\n\r\n    return (\r\n\r\n      this.state.dayforcast!=null ? (\r\n        \r\n      <div className=\"CurrentWeather\">\r\n        <header className=\"App-header\">\r\n           <SearchBar onSearch={this.refreshWeather.bind(this)}  />\r\n        </header>\r\n        <div className=\"squareContainer\">\r\n        <div className=\"dailyForecast\">\r\n         {this.state.dayforcast && <CurrentWeatherLocation className=\"currentWeather\" name={this.state.cityName} temperture={this.state.dayforcast[0].Temperature.Metric.Value} title={this.state.dayforcast[0].WeatherText}/>}\r\n         <Button type=\"primary\" disabled={this.state.favoritesDisabled} onClick={this.addToFavorites.bind(this)}>Add to favorites</Button>\r\n        </div>\r\n        <table className=\"fiveDayGrid\">\r\n            <tr>  \r\n        {this.state.forecast.map((dayInfo,index)=>\r\n          <td className=\"component1\">  <WeatherDailyView daily={dateformat(new Date(dayInfo.Date),\"dddd\").substring(0,3)} temperture={dayInfo.Temperature.Maximum.Value} key={index} /> </td>\r\n        \r\n            \r\n        )}\r\n        </tr>  \r\n        </table> \r\n        </div>\r\n      </div>\r\n      ) : (<Spin size=\"large\" className=\"spin\"/>)\r\n    );\r\n  }\r\n    }\r\n\r\n\r\n    \r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { Card } from 'antd';\r\nimport \"./weather.css\"\r\n\r\nexport default class FavoriteCity extends React.Component{\r\n\r\n    render(){\r\n       const {city,temperture,title} = this.props;\r\n\r\n\r\n        return (\r\n            <div className=\"component1\">\r\n                <h1>{city}</h1>\r\n                <h3>{temperture}</h3>\r\n                <h3>{title}</h3>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from \"react\"\r\nimport FavoriteCity from \"./favoriteCity\"\r\nimport {API as A,FORECAST_ONE_DAY} from \"./weather\"\r\n\r\n\r\nconst API = \"rRN6dTLDIhr3Dl8sJX9PtuLR8cuvDAPt\"\r\nexport default class Favorites extends React.Component{\r\n\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            favorites: this.loadFavorites(),\r\n            favoritesDetails:[]\r\n        }\r\n        this.componentDidMount()\r\n    }\r\n\r\n\r\n    loadFavorites(){\r\n        let favorites = JSON.parse(localStorage.getItem(\"favorites\"))\r\n        if(!favorites){\r\n            return []\r\n\r\n        }\r\n        for(let key in favorites){\r\n            favorites[key][\"loaded\"]=false\r\n        }\r\n        return favorites\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        const favorites = this.state.favorites\r\n        for (let cityKey in favorites){\r\n            fetch(FORECAST_ONE_DAY+cityKey+`?apikey=${API}`).then(\r\n                (response)=> response.json()\r\n            ).then(\r\n                (body)=>{\r\n                    let bodyWithName = body[0];\r\n                    console.log(bodyWithName);\r\n                    \r\n                    bodyWithName[\"city\"] = favorites[cityKey].city\r\n                    bodyWithName[\"loaded\"] = true\r\n                    let prevFavorites = this.state.favorites\r\n                    prevFavorites[cityKey] = bodyWithName\r\n                    this.setState({\r\n                        favorites:prevFavorites\r\n                            \r\n                        \r\n                    })\r\n                }\r\n                )\r\n\r\n        }\r\n\r\n    }\r\n\r\n    toCityView(favorite, index){\r\n        console.log(\"favorite is: \"+ JSON.stringify(favorite));\r\n        if(favorite.loaded){\r\n        return(\r\n            <td>\r\n            <FavoriteCity city={favorite.city} title={favorite.WeatherText} temperture={favorite.Temperature.Metric.Value}  />\r\n            </td>\r\n        )\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n        const favorites = this.state.favorites\r\n        return(\r\n            <div>\r\n                <h1>\r\n                    Favorites\r\n                </h1>\r\n                <table>\r\n                    <tr>\r\n                {Object.keys(favorites).map((key,index) =>\r\n                    this.toCityView(favorites[key], index)\r\n                )}\r\n                </tr>\r\n                </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CurrentWeather from \"../components/weather\";\r\nimport Favorites from \"../components/favorites\";\r\n\r\nexport default () =>\r\n    <Switch>\r\n        <Route exact path=\"/\" component={CurrentWeather} />\r\n        <Route exact path=\"/favorites\" component={Favorites} />\r\n    </Switch>;","import React, { useState, useEffect } from 'react';\nimport CurrentWeather from \"./components/weather\"\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarText\n} from 'reactstrap';\nimport {HashRouter} from 'react-router-dom';\nimport NavRoots from \"./routes/NavRoots\"\nimport \"./App.css\"\n\n\n\n\n\n\nconst api = \"5QdG89dKykTEr5xjK0rnYXxZN9xy5D5r\"\nconst getLocation =\"http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=5QdG89dKykTEr5xjK0rnYXxZN9xy5D5r&q=\"\nconst demo = \"london\"\nconst targetUrl=getLocation+demo\n\n\n\n\n\n\n\n\n\nexport default class App extends React.Component {\n  navBar(){\n    return (\n      <Navbar color=\"light\" light expand=\"md\" >\n        <NavbarBrand href=\"/\">Home</NavbarBrand>\n        <NavbarToggler onClick={()=>{}} />\n        <Collapse isOpen={true} navbar>\n          <Nav className=\"mr-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"/favorites/\">Favorites</NavLink>\n            </NavItem>\n          </Nav>\n          <NavbarText>Herolo Weather Task</NavbarText>\n        </Collapse>\n      </Navbar>\n\n\n    )\n  }\nrender(){\n\n\n\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <header className=\"App-header\">\n          {this.navBar()}\n        </header>\n            <div className=\"container\">\n              <NavRoots />\n            </div>\n      </HashRouter>\n    </div>\n  );\n}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}